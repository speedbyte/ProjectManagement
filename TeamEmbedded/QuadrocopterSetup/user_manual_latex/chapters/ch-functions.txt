% Bsp. eines Hauptteils

\chapter{Functions in C}
\label{ch:functions}

These chapter is about the C-Code we developed to work via Raspberry Pi with the sensors.


\section{I$^2$C}

\begin{tabbing}

C Function Name: \= xxxxx \\\\
 
Input: \>  xxxx \\\\

Output:  \>  xxxx \\\\

Description:  \>  xxxx \\

\end{tabbing}


\subsection{Configuration}

\subsection{I$^2$C Write}

\subsection{I$^2$C Read}



\section{Analog-Digital-Converter (ADC)}

\begin{tabbing}

C Function Name: \= g\_halADC\_get\_ui16\\\\

Input: \> char (A0-A3 input selection)\\\\

Output: \> float (converted analog value)\\\\

Description: \> Interface to read ADS1015 (ADC)\\

\end{tabbing}

\subsection{Configuration}

Sensor Board Name: Pololu ADS1015\\
Sensor Name: GP2Y0A60SZLF\\

l\_mux\_ui8 = 0xC2;\\
" C "\textsubscript{16}:\\
The first Hex-Value depends on Starting Conversion + the Input, which Pin to read A0-3

" 2 "\textsubscript{16}: \\
The second Value is PGA (001)=+-4,099V and continuous Mode (0)\\


These three bytes are written to the ADS1015 to set the config register and start the conversion 

l\_writeBuf\_rg24[0] = 1;		\\ 
This sets the pointer register to write the following two bytes to the config register

l\_writeBuf\_rg24[1] = l\_mux\_ui8;   	\\ 
This sets the 8 MSBs of the config register (bits 15-8) to 11000011

l\_writeBuf\_rg24[2] = 0x23;  		\\ 
This sets the 8 LSBs of the config register (bits  7-0) to 00100011\\   


" 2 "\textsubscript{16}:\\
  // First Hex is sample Rate. (001) sets to 250SPS + Comp Mode (0)
	
" 3 "\textsubscript{16}:\\
  // Second Hex is Comp. config. (0011) disable the comparator
	
	
	
The l\_writeBuf\_rg24 is written to the configuration register of the ADC. After that, we can read the converted analog values from the chosen input.



\subsection{ADC Read}

To read a converted analog value, you need to set the pointer register to 0.\\

When the pointer register is set to 0 this signals that the converted analog value should be provided. You will get the these values when performing a i$^2$c-read command the next time. This value is 16 Bit large and will be calculated as a float-value, depending on the resolution which is adjusted.



\section{Infrared Sensor}

\begin{tabbing}
C Function Name: \= g\_halADC\_get\_ui16\\\\

Input: \> char (select input on which IR is connected)\\\\

Output: \> float (Voltage from sensor)\\\\

Description: \> Since our IR Sensor only provides analog output, we need to use the ADC.\\
\end{tabbing}


\subsection{Configuration}

\subsection{Read Sensor Values}



\section{LIDAR-Lite Laser Sensor}

\begin{tabbing}

C Function Name: \= xxxxx \\\\
 
Input: \>  xxxx \\\\

Output:  \>  xxxx \\\\

Description:  \>  xxxx \\

\end{tabbing}



\subsection{Configuration}


\subsection{Read Sensor Values}



%\chapter{Ergebnisse}
%\label{sec:ergeb}
%\enquote{Neuigkeiten} Messergebnisse
%
%\section{Literaturverweise}
%\label{sec:real-literatur}
%
%Verweise im Text: \cite{doc:stz} und \cite{doc:gun}.


