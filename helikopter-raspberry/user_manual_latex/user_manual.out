\BOOKMARK [0][]{chapter.1}{1 Project's context and goals}{}% 1
\BOOKMARK [1][-]{section.1.1}{1.1 Temporal project scope}{chapter.1}% 2
\BOOKMARK [1][-]{section.1.2}{1.2 Contentual project scope}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.3}{1.3 Tasks and responsible team members}{chapter.1}% 4
\BOOKMARK [1][-]{section.1.4}{1.4 Repository structure}{chapter.1}% 5
\BOOKMARK [1][-]{section.1.5}{1.5 Documentation}{chapter.1}% 6
\BOOKMARK [0][]{chapter.2}{2 Landing Concept}{}% 7
\BOOKMARK [1][-]{section.2.1}{2.1 Challenges}{chapter.2}% 8
\BOOKMARK [2][-]{subsection.2.1.1}{2.1.1 Drift}{section.2.1}% 9
\BOOKMARK [2][-]{subsection.2.1.2}{2.1.2 Orientation}{section.2.1}% 10
\BOOKMARK [2][-]{subsection.2.1.3}{2.1.3 Distance}{section.2.1}% 11
\BOOKMARK [2][-]{subsection.2.1.4}{2.1.4 Landing Zone}{section.2.1}% 12
\BOOKMARK [1][-]{section.2.2}{2.2 Landing Mode}{chapter.2}% 13
\BOOKMARK [2][-]{subsection.2.2.1}{2.2.1 Activation}{section.2.2}% 14
\BOOKMARK [2][-]{subsection.2.2.2}{2.2.2 Abort Landing}{section.2.2}% 15
\BOOKMARK [0][]{chapter.3}{3 Open Points}{}% 16
\BOOKMARK [1][-]{section.3.1}{3.1 Connecting actuators}{chapter.3}% 17
\BOOKMARK [1][-]{section.3.2}{3.2 Reacting on sensor values}{chapter.3}% 18
\BOOKMARK [0][]{chapter.4}{4 Raspberry Pi based hardware platform}{}% 19
\BOOKMARK [1][-]{section.4.1}{4.1 Hardware and device communication}{chapter.4}% 20
\BOOKMARK [2][-]{subsection.4.1.1}{4.1.1 Basic components and chosen sensors}{section.4.1}% 21
\BOOKMARK [2][-]{subsection.4.1.2}{4.1.2 I2C adressing}{section.4.1}% 22
\BOOKMARK [2][-]{subsection.4.1.3}{4.1.3 Read}{section.4.1}% 23
\BOOKMARK [2][-]{subsection.4.1.4}{4.1.4 Write}{section.4.1}% 24
\BOOKMARK [2][-]{subsection.4.1.5}{4.1.5 UART communication}{section.4.1}% 25
\BOOKMARK [1][-]{section.4.2}{4.2 Technical drawings and packaging}{chapter.4}% 26
\BOOKMARK [1][-]{section.4.3}{4.3 Bill of materials}{chapter.4}% 27
\BOOKMARK [0][]{chapter.5}{5 Individual parts}{}% 28
\BOOKMARK [1][-]{section.5.1}{5.1 Raspberry Pi B+}{chapter.5}% 29
\BOOKMARK [1][-]{section.5.2}{5.2 Adafruit GPS Hat}{chapter.5}% 30
\BOOKMARK [1][-]{section.5.3}{5.3 Polulu AltIMU v4}{chapter.5}% 31
\BOOKMARK [1][-]{section.5.4}{5.4 Adafruit 12bit ADC over I2C}{chapter.5}% 32
\BOOKMARK [0][]{chapter.6}{6 Assembly}{}% 33
\BOOKMARK [1][-]{section.6.1}{6.1 Placing ADC and IMU on GPS Hat}{chapter.6}% 34
\BOOKMARK [1][-]{section.6.2}{6.2 Wedding of GPS Hat and Raspberry Pi B+}{chapter.6}% 35
\BOOKMARK [0][]{chapter.7}{7 Development Environment \(Virtual Machine Image and Native Machine\)}{}% 36
\BOOKMARK [1][-]{section.7.1}{7.1 Ubuntu}{chapter.7}% 37
\BOOKMARK [1][-]{section.7.2}{7.2 Toolchain}{chapter.7}% 38
\BOOKMARK [1][-]{section.7.3}{7.3 Eclipse}{chapter.7}% 39
\BOOKMARK [2][-]{subsection.7.3.1}{7.3.1 Installation of Eclipse Luna}{section.7.3}% 40
\BOOKMARK [2][-]{subsection.7.3.2}{7.3.2 Remote Debugging}{section.7.3}% 41
\BOOKMARK [0][]{chapter.8}{8 Realtime-capable Linux Operating System}{}% 42
\BOOKMARK [1][-]{section.8.1}{8.1 Creating a bootable SD-Card with a pre-configured Firmware}{chapter.8}% 43
\BOOKMARK [1][-]{section.8.2}{8.2 Building a Real-Time Linux Kernel}{chapter.8}% 44
\BOOKMARK [1][-]{section.8.3}{8.3 EMLID distribution for development purposes}{chapter.8}% 45
\BOOKMARK [1][-]{section.8.4}{8.4 Configurations of peripherals and busses}{chapter.8}% 46
\BOOKMARK [2][-]{subsection.8.4.1}{8.4.1 Raspbian distribution specific}{section.8.4}% 47
\BOOKMARK [2][-]{subsection.8.4.2}{8.4.2 EMLID distribution specific}{section.8.4}% 48
\BOOKMARK [0][]{chapter.9}{9 Software structure}{}% 49
\BOOKMARK [1][-]{section.9.1}{9.1 Software layer and structure concept}{chapter.9}% 50
\BOOKMARK [1][-]{section.9.2}{9.2 Overview on the functional units}{chapter.9}% 51
\BOOKMARK [2][-]{subsection.9.2.1}{9.2.1 Application Layer}{section.9.2}% 52
\BOOKMARK [2][-]{subsection.9.2.2}{9.2.2 Signal Processing Layer}{section.9.2}% 53
\BOOKMARK [2][-]{subsection.9.2.3}{9.2.3 Hardware Abstraction Layer}{section.9.2}% 54
\BOOKMARK [2][-]{subsection.9.2.4}{9.2.4 Low-Level Driver Layer}{section.9.2}% 55
\BOOKMARK [0][]{chapter.10}{10 UDP-based network connection to MATLAB}{}% 56
\BOOKMARK [1][-]{section.10.1}{10.1 C-Library for UDP-based network access}{chapter.10}% 57
\BOOKMARK [2][-]{subsection.10.1.1}{10.1.1 Adding librt to the cross-compiler's linker}{section.10.1}% 58
\BOOKMARK [2][-]{subsection.10.1.2}{10.1.2 Basic network library}{section.10.1}% 59
\BOOKMARK [2][-]{subsection.10.1.3}{10.1.3 IMU specific network library}{section.10.1}% 60
\BOOKMARK [2][-]{subsection.10.1.4}{10.1.4 Signal Layer specific network library}{section.10.1}% 61
\BOOKMARK [1][-]{section.10.2}{10.2 MATLAB/Simulink S-Function}{chapter.10}% 62
\BOOKMARK [2][-]{subsection.10.2.1}{10.2.1 Block creation with S-Function builder}{section.10.2}% 63
\BOOKMARK [2][-]{subsection.10.2.2}{10.2.2 Extending the C-Code templates}{section.10.2}% 64
\BOOKMARK [2][-]{subsection.10.2.3}{10.2.3 Compiling the S-Function block}{section.10.2}% 65
\BOOKMARK [1][-]{section.10.3}{10.3 3D-Representation of orientation data}{chapter.10}% 66
\BOOKMARK [0][]{chapter.11}{11 Analysing Data and sensor fusion}{}% 67
\BOOKMARK [1][-]{section.11.1}{11.1 Calculation of the orientation angles}{chapter.11}% 68
\BOOKMARK [2][-]{subsection.11.1.1}{11.1.1 Magnetic sensor test}{section.11.1}% 69
\BOOKMARK [2][-]{subsection.11.1.2}{11.1.2 Improvement magnetic sensor}{section.11.1}% 70
\BOOKMARK [1][-]{section.11.2}{11.2 Sensor fusion for Inertial Measurement Unit}{chapter.11}% 71
\BOOKMARK [2][-]{subsection.11.2.1}{11.2.1 Complementary-Filter}{section.11.2}% 72
\BOOKMARK [2][-]{subsection.11.2.2}{11.2.2 Kalman-Filter}{section.11.2}% 73
\BOOKMARK [1][-]{section.11.3}{11.3 Matrix library}{chapter.11}% 74
\BOOKMARK [1][-]{section.11.4}{11.4 Sensor fusion controlling}{chapter.11}% 75
\BOOKMARK [0][]{chapter.12}{12 Remote Control Unit: PPM Decoding}{}% 76
\BOOKMARK [1][-]{section.12.1}{12.1 Graupner PPM sum signal in a nutshell}{chapter.12}% 77
\BOOKMARK [1][-]{section.12.2}{12.2 Building a custom kernel driver}{chapter.12}% 78
\BOOKMARK [1][-]{section.12.3}{12.3 Stimulating the GPIO-Pins for validation}{chapter.12}% 79
\BOOKMARK [1][-]{section.12.4}{12.4 Results on experimental kernel driver}{chapter.12}% 80
\BOOKMARK [0][]{chapter.13}{13 Defined Tests for our sensors}{}% 81
\BOOKMARK [1][-]{section.13.1}{13.1 Infrared Distance Sensor}{chapter.13}% 82
\BOOKMARK [1][-]{section.13.2}{13.2 Ultrasonic Distance Sensor}{chapter.13}% 83
\BOOKMARK [1][-]{section.13.3}{13.3 LIDAR-lite Laser Distance Sensor}{chapter.13}% 84
\BOOKMARK [1][-]{section.13.4}{13.4 Inertial Measurement Unit \(IMU\)}{chapter.13}% 85
\BOOKMARK [2][-]{subsection.13.4.1}{13.4.1 Acceleration and Magnet Sensor\(Compass\)}{section.13.4}% 86
\BOOKMARK [2][-]{subsection.13.4.2}{13.4.2 Gyroscope Sensor}{section.13.4}% 87
\BOOKMARK [2][-]{subsection.13.4.3}{13.4.3 Pressure Sensor}{section.13.4}% 88
\BOOKMARK [0][]{chapter.14}{14 Sensors and limits}{}% 89
\BOOKMARK [1][-]{section.14.1}{14.1 Analog- Digital Converter}{chapter.14}% 90
\BOOKMARK [1][-]{section.14.2}{14.2 Infrared Analog Distance Sensor}{chapter.14}% 91
\BOOKMARK [1][-]{section.14.3}{14.3 GPS}{chapter.14}% 92
\BOOKMARK [1][-]{section.14.4}{14.4 Inertia Measurement Unit \(IMU\)}{chapter.14}% 93
\BOOKMARK [2][-]{subsection.14.4.1}{14.4.1 3D accelerometer and 3D magnetometer module}{section.14.4}% 94
\BOOKMARK [2][-]{subsection.14.4.2}{14.4.2 MEMS pressure sensor}{section.14.4}% 95
\BOOKMARK [2][-]{subsection.14.4.3}{14.4.3 MEMS motion sensor: three-axis digital output gyroscope}{section.14.4}% 96
\BOOKMARK [1][-]{section.14.5}{14.5 LIDAR-Lite Laser Ranging Module}{chapter.14}% 97
\BOOKMARK [2][-]{subsection.14.5.1}{14.5.1 Technology}{section.14.5}% 98
\BOOKMARK [2][-]{subsection.14.5.2}{14.5.2 possible measurement problems}{section.14.5}% 99
\BOOKMARK [0][]{chapter.15}{15 Infrared Sensor}{}% 100
\BOOKMARK [1][-]{section.15.1}{15.1 First steps}{chapter.15}% 101
\BOOKMARK [2][-]{subsection.15.1.1}{15.1.1 ADC Configuration}{section.15.1}% 102
\BOOKMARK [1][-]{section.15.2}{15.2 Measured Values}{chapter.15}% 103
\BOOKMARK [1][-]{section.15.3}{15.3 Conclusion}{chapter.15}% 104
\BOOKMARK [0][]{chapter.16}{16 Ultrasonic Distance Sensor}{}% 105
\BOOKMARK [0][]{chapter.17}{17 LIDAR Laser Sensor}{}% 106
\BOOKMARK [1][-]{section.17.1}{17.1 Connecting the sensor with I2C}{chapter.17}% 107
\BOOKMARK [1][-]{section.17.2}{17.2 First steps}{chapter.17}% 108
\BOOKMARK [1][-]{section.17.3}{17.3 Measured Values}{chapter.17}% 109
\BOOKMARK [1][-]{section.17.4}{17.4 conclusion}{chapter.17}% 110
\BOOKMARK [0][]{chapter.18}{18 Functions in C}{}% 111
\BOOKMARK [1][-]{section.18.1}{18.1 I2C}{chapter.18}% 112
\BOOKMARK [2][-]{subsection.18.1.1}{18.1.1 Configuration}{section.18.1}% 113
\BOOKMARK [2][-]{subsection.18.1.2}{18.1.2 I2C Write}{section.18.1}% 114
\BOOKMARK [2][-]{subsection.18.1.3}{18.1.3 I2C Read}{section.18.1}% 115
\BOOKMARK [1][-]{section.18.2}{18.2 Analog-Digital-Converter \(ADC\)}{chapter.18}% 116
\BOOKMARK [2][-]{subsection.18.2.1}{18.2.1 Configuration}{section.18.2}% 117
\BOOKMARK [2][-]{subsection.18.2.2}{18.2.2 ADC Read}{section.18.2}% 118
\BOOKMARK [1][-]{section.18.3}{18.3 Infrared Sensor}{chapter.18}% 119
\BOOKMARK [2][-]{subsection.18.3.1}{18.3.1 Configuration}{section.18.3}% 120
\BOOKMARK [2][-]{subsection.18.3.2}{18.3.2 Read Sensor Values}{section.18.3}% 121
\BOOKMARK [1][-]{section.18.4}{18.4 LIDAR-Lite Laser Sensor}{chapter.18}% 122
\BOOKMARK [2][-]{subsection.18.4.1}{18.4.1 Configuration}{section.18.4}% 123
\BOOKMARK [2][-]{subsection.18.4.2}{18.4.2 Read Sensor Values}{section.18.4}% 124
\BOOKMARK [0][]{chapter.19}{19 I2C Configuration}{}% 125
\BOOKMARK [1][-]{section.19.1}{19.1 raspi-config}{chapter.19}% 126
\BOOKMARK [1][-]{section.19.2}{19.2 Module File}{chapter.19}% 127
\BOOKMARK [1][-]{section.19.3}{19.3 I2CTools}{chapter.19}% 128
\BOOKMARK [1][-]{section.19.4}{19.4 Test I2C-1}{chapter.19}% 129
\BOOKMARK [1][-]{section.19.5}{19.5 Set up I2C-0}{chapter.19}% 130
\BOOKMARK [0][]{chapter.20}{20 Conclusion and outlook}{}% 131
\BOOKMARK [1][-]{section.20.1}{20.1 Achieved project goals and results}{chapter.20}% 132
\BOOKMARK [1][-]{section.20.2}{20.2 Remaining project goals and outlook}{chapter.20}% 133
\BOOKMARK [0][]{appendix.A}{A - Further technical drawings}{}% 134
\BOOKMARK [1][-]{section.A.1}{A.1 Raspberry Pi B+}{appendix.A}% 135
\BOOKMARK [1][-]{section.A.2}{A.2 Adafruit GPS Hat}{appendix.A}% 136
\BOOKMARK [1][-]{section.A.3}{A.3 Polulu AltIMU v4}{appendix.A}% 137
\BOOKMARK [1][-]{section.A.4}{A.4 Adafruit 12bit ADC over I2C}{appendix.A}% 138
\BOOKMARK [0][]{appendix.B}{B - Code documentation}{}% 139
\BOOKMARK [0][]{appendix.C}{C - Soure code}{}% 140
\BOOKMARK [1][-]{section.C.1}{C.1 S-Function Builder generated C-Code}{appendix.C}% 141
\BOOKMARK [2][-]{subsection.C.1.1}{C.1.1 Raw C-Code template of S-Function}{section.C.1}% 142
\BOOKMARK [2][-]{subsection.C.1.2}{C.1.2 Raw template code of wrapper function}{section.C.1}% 143
\BOOKMARK [1][-]{section.C.2}{C.2 MATLAB-Code for Simulink 3D visualization}{appendix.C}% 144
\BOOKMARK [1][-]{section.C.3}{C.3 Kernel driver ppmDemux}{appendix.C}% 145
\BOOKMARK [0][]{appendix.D}{D - Default login credentials}{}% 146
\BOOKMARK [1][-]{section.D.1}{D.1 Development Environment}{appendix.D}% 147
\BOOKMARK [1][-]{section.D.2}{D.2 Raspberry Pi Firmware}{appendix.D}% 148
\BOOKMARK [0][]{appendix*.154}{Bibliography}{}% 149
